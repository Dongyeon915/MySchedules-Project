<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.my_schedules.dao.TaskDAO">

  <!-- resultMap 으로 내가만든 resultMap사용가능    resutlSet -> HashMap -> resultMap -->
  <!--  <resultMap id="사용 하고 싶은 이름" type="내가 만든 타입 풀주소">-->
  <!--  primarykey  -->
  <!--    <id property="해당 클래스 primaryKey 필드 이름" javaType="해당 자바 타입" column="DB명"/>-->
  <!--  Json변환시 공통적인 필드 빼기  -->
  <!--    <result property="필드명" column="Db명" javaType="자바타입"/>-->
  <!--    <association property="1대1 설정한 클래스 필드명" javaType="해당원래 pojo클래스명">-->
  <!--   association에서 출력하고 싶은 필드명을 뽑지 않을시 automapping으로 모든 컬럼을 출력할수있다   -->
  <!--    </association>-->
  <!--    <collection property="1대 n관계로 리스트 출력시 사용" ofType="해당 클래스명 ex) product">-->
  <!--   세분화 가능하다   -->
  <!--      <id property="" column="" javaType=""/>-->
  <!--      <result property="" column="" javaType=""/>-->
  <!--    </collection>-->
  <!--  </resultMap>-->
  <!--  -->
  <!--  <select id="Dao메소드명" resultMap="result타입과는 다른 내가만든 resultmap 클래스명" parameterType="dao로 넘어오는 타입명">-->
  <!--  </select>-->

  <!-- 미사용중 모든 userId 정보를 가져온다 미사용 -->
  <select id="getAllTask" resultType="TaskDto">
    SELECT * FROM task
  </select>

  <!--
  useGeneratedKeys : 자동 생성키값 반환 여부를 지정합니다. (default: false)
  -keyColumn : PK로 지정할 테이블 컬럼명을 지정합니다.
  -keyProperty : 반환된 값을 매핑 할 변수명을 지정합니다. -->

  <!-- 자바 DTO형식으로 GETTER가 생성 되기 때문에 DTO에맞는 형식으로 넣어줘야한다 -->
  <insert id="setTask" parameterType="TaskDto" useGeneratedKeys="true" keyColumn="taskId" keyProperty="taskId">
    insert into task values(#{taskId}, #{todoTask}, #{checkboxComplete}, #{completeTime}, #{date}, #{userId})
  </insert>

  <!--    userId가 일치하는 user만 가져온다 미사용-->
  <!--  <select id="getUserById" parameterType="int" resultType="TaskDto">-->
  <!--    SELECT * FROM task where user_id = #{userId}-->
  <!--  </select>-->

  <!-- 날짜포함 확인  사용중 -->
  <select id="getUserById" parameterType="TaskDto" resultType="TaskDto">
    SELECT * FROM task where user_id = #{userId} and date =#{date}
  </select>

  <!-- 체크박스 입력 -->
  <update id="setCheckboxComplete" parameterType="TaskDto">
    UPDATE task SET checkbox_complete = #{checkboxComplete},complete_time = #{completeTime} where
    task_id = #{taskId}
  </update>

  <update id="putTask" parameterType="TaskDto">
    UPDATE task SET todo_task = #{todoTask} where task_id = #{taskId}
  </update>

  <delete id="deleteTask" parameterType="int">
    DELETE FROM task where task_id = #{taskId}
  </delete>

<!-- userId를 primary key로 잡으면 데이트는 계속해서 해당날로 insert작업을 수행하기에 date를 임시로 잡아넣었다 입력시 userId를 post로 넣으니 겹치긴힘들다 -->
  <insert id="setDefaultRestTask" parameterType="TodoResultDTO">
    INSERT INTO todo_result(rest_task,clear_task,date,user_id) VALUES(#{restTask},#{clearTask},#{date},#{userId}) ON DUPLICATE KEY
    UPDATE rest_task = rest_task + 1
  </insert>

  <!-- clearTask올리기 -->
  <update id="setClearTask" parameterType="TodoResultDTO">
    UPDATE todo_result SET clear_task = clear_task + 1,rest_task = rest_task - 1 where user_id =
    #{userId} and date = #{date}
  </update>
<!-- task삭제시 result의 갯수를 줄여준다 -->
  <update id="deleteTaskResult" parameterType="TodoResultDTO">
    UPDATE todo_result SET rest_task = rest_task - 1 where user_id =
    #{userId} and date = #{date}
  </update>


</mapper>